

window.onload = function(e){

var body = d3.select("body")
    .append("div")
    .attr("id", "legend");

var h = 500,
    w = 1000;
    fill = "100%"
var x = d3.scale.ordinal().rangeRoundBands([0, w], .05);

// scale the height of the bars
var y = d3.scale.linear()
    .range([750, 0]);
// var projection = d3.geo.mercator()
//         .scale(1)
//         .translate([3, 0]);
//
// var path = d3.geo.path()
//         .projection(projection);

// var svg = d3.select("#map").append("svg")
//         .attr("height", 10)
//         .attr("width", 10)
//         .attr("class", "svg")


var svg1 = d3.select("#checkbox").append("svg")
        .attr("height", h)
        .attr("width", fill);

var svg2 = d3.select("#flower").append("svg")
        .attr("height", h)
        .attr("width", fill);

var svg3 = d3.select("#bar").append("svg")
        .attr("height", h)
        .attr("width", fill);


var basic = new Datamap({
      element: document.getElementById("map")
  });
d3.select(".datamap")
    .attr("width", "100%")
    .attr("transform", "translate(" + -50 + "," + -50 + ")")
    .attr("viewBox","-50 150 1100 250")
d3.select("path")
    .attr("height", "100%")

var year1 = 2003

d3.select("#slider").insert("p", ":first-child").append("input")
    .attr("type", "range")
    .attr("min", "2003")
    .attr("max", "2016")
    .attr("value", year1)
    .attr("id", "year");

var title = d3.select("#slider").insert("h1", ":first-child")
title.text(year1)
d3.json("../data/dataBar1.json", function(data) {
  console.log(data);
  dataBar = data
d3.select("#year").on("input", function() {
  year1 = this.value
  title.text(year1)})
d3.selectAll('.datamaps-subunit').on("click", function(d, dataBar) {

    country = d["properties"]["name"]
    countrycode = d["id"];
    console.log(country);
    data1 = data[String(year1)][String(countrycode)]
    console.log(data1);
    updatebar(data1, country ,year1, x, y)
    // d3.event.stopPropagation();
    });

});
function updatebar(data1, stateid, year1, x, y, remove){

      d3.selectAll(".yaxis1").remove()
      d3.selectAll(".bar").remove()
      d3.selectAll(".xaxis1").remove()

  console.log(data1);
q = Object.getOwnPropertyNames(data1)
data = data1
data_list = []
data_list1 =[]

data_list1.push(q[0])
data_list1.push(q[1])
data_list1.push(q[2])
data_list1.push(q[3])
data_list1.push(q[4])


// data_list.push(parseFloat(data1["Violent crime rate"]))
data_list.push(parseFloat(Math.abs(data1["Control of Corruption: Estimate"])))
data_list.push(parseFloat(Math.abs(data1["Control of Corruption: Estimate"])))
data_list.push(parseFloat(Math.abs(data1["Control of Corruption: Estimate"])))
data_list.push(parseFloat(Math.abs(data1["Control of Corruption: Estimate"])))
data_list.push(parseFloat(Math.abs(data1["Control of Corruption: Estimate"])))


// data_list.push(parseFloat(data1["Legacy rape rate"]))
// data_list.push(parseFloat(data1["Robbery rate"]))
// data_list.push(parseFloat(data1["Aggravated assault rate"]))

console.log(data_list1);
console.log(data1);
// Scale the range of the data in the domains
x.domain(data_list1.map(function(d) { return d; }));
y.domain([0, d3.max(data_list, function(d) { return d/100})])

svg3.selectAll("bar")
    .data(data_list)
  .enter().append("rect")
    .attr("class", "bar")
    .attr("x", function(d, i ) { return 50 + (i * 200) })
    .attr("y", function(d, i) { return 300 - ( d )})
    .attr("height", function(d, i) { return d*100; })
    .attr("width", 30)

svg3.append("g")
    .attr("class", 'xaxis1')
    .attr("transform", "translate(100," + 300 + ")")
    .call(d3.svg.axis(x));

// add the y Axis
svg3.append("g")
    .attr("class", 'yaxis1')
    .attr("transform", "translate(100," + 50 + ")")
    .call(d3.svg.axis(y));


}
console.log(year1);
// var basic_choropleth = new Datamap({
//   element: document.getElementById("map"),
//   projection: 'mercator',
//   fills: {
//     defaultFill: "#ABDDA4",
//     authorHasTraveledTo: "#fa0fa0"
//   },
//   data: {
//     USA: { fillKey: "authorHasTraveledTo" },
//     JPN: { fillKey: "authorHasTraveledTo" },
//     ITA: { fillKey: "authorHasTraveledTo" },
//     CRI: { fillKey: "authorHasTraveledTo" },
//     KOR: { fillKey: "authorHasTraveledTo" },
//     DEU: { fillKey: "authorHasTraveledTo" },
//   }
// });
//
// var colors = d3.scale.category10();
//
//
// window.setInterval(function() {
//   d3.select("datamap").attr("width", "60%");
//   basic_choropleth.updateChoropleth({
//
//   });
// }, 2000);

}
